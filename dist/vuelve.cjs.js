"use strict";const n=require("vue"),v=require("lodash.clonedeep"),y=e=>typeof e=="function",{isArray:j}=Array,w={mounted:n.onMounted,beforeUpdate:n.onBeforeUpdate,updated:n.onUpdated,beforeUnmount:n.onBeforeUnmount,unmounted:n.onUnmounted,errorCaptured:n.onErrorCaptured,renderTracked:n.onRenderTracked,renderTriggered:n.onRenderTriggered,activated:n.onActivated,deactivated:n.onDeactivated,serverPrefetch:n.onServerPrefetch};function O(e){return function(...h){let f={},s={},p={},E={};const o={};if(e.props){const t=j(e.props),r=t?e.props:Object.keys(e.props),d=c=>Object.values(e.props)[c];h==null||h.forEach((c,a)=>{if(t){const i=e.props[a];i&&(f={...f,[i]:c})}else{const i=r[a],u=d(a);if(i&&u){if(c.constructor.name!==u.name)throw new TypeError(`Invalid prop: type check failed for prop "${i}". Expected ${u==null?void 0:u.name}, got ${c.constructor.name}`);f={...f,[i]:c}}}})}if(e.data&&y(e.data)){const t=e.data();Object.entries(t).forEach(([r,d])=>{const c=n.ref(v(d));s={...s,[r]:c}})}return Object.assign(o,s,f),e.methods&&Object.entries(e.methods).forEach(([t,r])=>{p={...p,[t]:r.bind(o)}}),Object.assign(o,p),Object.entries(w).forEach(([t,r])=>{const d=t;if(e[d]){const c=e[d];r((...a)=>c.apply(o,a))}}),e.watch&&Object.entries(e.watch).forEach(([t,r])=>{const d=r,c=o[t];c&&n.watch(c,d.bind(o))}),e.watchEffect&&Object.values(e.watchEffect).forEach(t=>{const r=t;n.watchEffect(r.bind(o))}),e.computed&&Object.keys(e.computed).forEach(t=>{const r=e.computed&&e.computed[t];r&&(E={...E,[t]:n.computed(r.bind(o))})}),{...f,...s,...p,...E}}}module.exports=O;
